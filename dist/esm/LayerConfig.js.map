{"version":3,"file":"LayerConfig.js","names":["clone","isEmpty","merge","buildBaseAxiosConfig","baseURL","headers","LayerConfig","axiosRequestConfig","extra","Object","create","interceptors","request","response","constructor","properties","toConfigObject","from","setName","name","Error","getName"],"sources":["../../src/LayerConfig.ts"],"sourcesContent":["import { clone, isEmpty, merge } from '@feugene/mu'\nimport type { AxiosRequestConfig, AxiosResponse } from 'axios'\nimport type { Recordable } from './global'\n\nfunction buildBaseAxiosConfig(): AxiosRequestConfig {\n  return {\n    baseURL: `/`,\n    headers: {},\n  }\n}\n\nexport type InterceptorSuccessParam<T> = (value: T) => T | Promise<T>\nexport type InterceptorErrorParam = ((error: any) => any) | undefined\nexport type InterceptorNormal<T> = [InterceptorSuccessParam<T>, InterceptorErrorParam]// | [InterceptorSuccessParam<T>]\nexport type InterceptorType<T> = (InterceptorSuccessParam<T>) | InterceptorNormal<T>\n\nexport type InterceptorFn<T> = (layer: LayerConfig, extra: ExtraProperties) => InterceptorType<T>\n\n\nexport interface ConfigLayerInterceptors {\n  request: InterceptorFn<AxiosRequestConfig>[];\n  response: InterceptorFn<AxiosResponse>[];\n}\n\nexport interface ConfigLayerConstructor {\n  axiosRequestConfig: AxiosRequestConfig;\n  interceptors: Partial<ConfigLayerInterceptors>;\n  from?: string;\n}\n\nexport type ExtraProperties = Recordable\nexport type LayerConfigStringable = LayerConfig | string\n\nexport default class LayerConfig {\n  public axiosRequestConfig: AxiosRequestConfig = {}\n\n  protected name?: string\n  public from?: string\n  protected parent?: string\n\n  public extra: ExtraProperties = Object.create(null)\n\n  public interceptors: ConfigLayerInterceptors = {\n    request: [],\n    response: [],\n  }\n\n  constructor(properties?: ConfigLayerConstructor) {\n    this.axiosRequestConfig = properties?.axiosRequestConfig || buildBaseAxiosConfig()\n\n    this.interceptors = merge(\n      {\n        request: [],\n        response: [],\n      },\n      <ConfigLayerInterceptors>properties?.interceptors,\n    ) as ConfigLayerInterceptors\n  }\n\n  public toConfigObject(): ConfigLayerConstructor {\n    return {\n      axiosRequestConfig: this.axiosRequestConfig,\n      interceptors: this.interceptors,\n      from: this.from,\n    }\n  }\n\n  public clone(): LayerConfig {\n    return new LayerConfig(clone(this.toConfigObject()))\n  }\n\n  public setName(name?: string): void {\n    if (isEmpty(name)) {\n      if (isEmpty(this.axiosRequestConfig.baseURL)) {\n        throw Error('You should add `name` to your layer or config must contains `baseURL` attribute!')\n      }\n\n      name = this.axiosRequestConfig.baseURL\n    }\n\n    this.name = name\n  }\n\n  public getName(): string {\n    return <string>this.name\n  }\n}\n"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,QAAsC,aAAtC;;AAIA,SAASC,oBAAT,GAAoD;EAClD,OAAO;IACLC,OAAO,EAAG,GADL;IAELC,OAAO,EAAE;EAFJ,CAAP;AAID;;AAwBD,eAAe,MAAMC,WAAN,CAAkB;EACxBC,kBAAkB,GAAuB,EAAvB;EAMlBC,KAAK,GAAoBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAApB;EAELC,YAAY,GAA4B;IAC7CC,OAAO,EAAE,EADoC;IAE7CC,QAAQ,EAAE;EAFmC,CAA5B;;EAKnBC,WAAW,CAACC,UAAD,EAAsC;IAC/C,KAAKR,kBAAL,GAA0BQ,UAAU,EAAER,kBAAZ,IAAkCJ,oBAAoB,EAAhF;IAEA,KAAKQ,YAAL,GAAoBT,KAAK,CACvB;MACEU,OAAO,EAAE,EADX;MAEEC,QAAQ,EAAE;IAFZ,CADuB,EAKEE,UAAU,EAAEJ,YALd,CAAzB;EAOD;;EAEMK,cAAc,GAA2B;IAC9C,OAAO;MACLT,kBAAkB,EAAE,KAAKA,kBADpB;MAELI,YAAY,EAAE,KAAKA,YAFd;MAGLM,IAAI,EAAE,KAAKA;IAHN,CAAP;EAKD;;EAEMjB,KAAK,GAAgB;IAC1B,OAAO,IAAIM,WAAJ,CAAgBN,KAAK,CAAC,KAAKgB,cAAL,EAAD,CAArB,CAAP;EACD;;EAEME,OAAO,CAACC,IAAD,EAAsB;IAClC,IAAIlB,OAAO,CAACkB,IAAD,CAAX,EAAmB;MACjB,IAAIlB,OAAO,CAAC,KAAKM,kBAAL,CAAwBH,OAAzB,CAAX,EAA8C;QAC5C,MAAMgB,KAAK,CAAC,kFAAD,CAAX;MACD;;MAEDD,IAAI,GAAG,KAAKZ,kBAAL,CAAwBH,OAA/B;IACD;;IAED,KAAKe,IAAL,GAAYA,IAAZ;EACD;;EAEME,OAAO,GAAW;IACvB,OAAe,KAAKF,IAApB;EACD;;AApD8B"}